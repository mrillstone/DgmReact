[{"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/reportWebVitals.js":"1","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/store.js":"2","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/reducers/dispatch.js":"3","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/api.js":"4","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Dispatches.js":"5","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/Dispatch.js":"6","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/dispatch.js":"7","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/App.js":"8","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/index.js":"9","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/DispatchForm.js":"10","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/useForm.js":"11","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/reducers/index.js":"12","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Nav.js":"13","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Home.js":"14","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/DispatchMenu.js":"15","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/About.js":"16","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Admin.js":"17"},{"size":362,"mtime":1606256976471,"results":"18","hashOfConfig":"19"},{"size":322,"mtime":1606606953597,"results":"20","hashOfConfig":"19"},{"size":895,"mtime":1606622581563,"results":"21","hashOfConfig":"19"},{"size":453,"mtime":1606851365286,"results":"22","hashOfConfig":"19"},{"size":3884,"mtime":1606782281295,"results":"23","hashOfConfig":"19"},{"size":426,"mtime":1606606736594,"results":"24","hashOfConfig":"19"},{"size":1346,"mtime":1606626567700,"results":"25","hashOfConfig":"19"},{"size":1130,"mtime":1606783266448,"results":"26","hashOfConfig":"19"},{"size":500,"mtime":1606256976470,"results":"27","hashOfConfig":"19"},{"size":7310,"mtime":1606783239020,"results":"28","hashOfConfig":"19"},{"size":774,"mtime":1606621875342,"results":"29","hashOfConfig":"19"},{"size":138,"mtime":1606604780819,"results":"30","hashOfConfig":"19"},{"size":261,"mtime":1606694236801,"results":"31","hashOfConfig":"19"},{"size":937,"mtime":1606698905415,"results":"32","hashOfConfig":"19"},{"size":3237,"mtime":1606786353195,"results":"33","hashOfConfig":"19"},{"size":163,"mtime":1606636022523,"results":"34","hashOfConfig":"19"},{"size":918,"mtime":1606781724799,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1lfffnw",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"41"},"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/reportWebVitals.js",[],["82","83"],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/store.js",[],["84","85"],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/reducers/dispatch.js",["86","87"],"import { ACTION_TYPES } from \"../actions/dispatch\"; \nconst initialState = {\n    list:[]\n}\n\n\nexport const dispatch = (state = initialState, action) => {\n    \n    switch (action.type) {\n        case ACTION_TYPES.FETCH_ALL:\n            return {\n                ...state,\n                list: [...action.payload]\n            }\n        \n        case ACTION_TYPES.CREATE:\n            return {\n                ...state,\n                list: [...state.list, action.payload]\n            }\n\n        case ACTION_TYPES.UPDATE:\n            return {\n                ...state,\n                list: state.list.map(x => x.id == action.payload.id ? action.payload : x)\n            }\n\n        case ACTION_TYPES.DELETE:\n            return {\n                ...state,\n                list: state.list.filter(x => x.id != action.payload)\n            }\n            \n        default:\n            return state\n    }\n}","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/api.js",["88"],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Dispatches.js",["89","90","91"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/dispatch\";\nimport { Grid , Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DispatchForm from \"./DispatchForm\";\n\n\nconst styles = theme => ({\n    root: {\n        \"& .MuiTableCell-head\": {\n            fontSize: \"1.25rem\"\n        }\n    },\n    paper: {\n        margin: theme.spacing(2),\n        padding: theme.spacing(2)\n    }\n})\n\nconst Dispatches = ({ classes, ...props }) => {\n    const [currentId, setCurrentId] = useState(0)\n\n    useEffect(() => {\n        props.fetchAllDispatches()\n    }, [])\n\n    //toast msg.\n    const { addToast } = useToasts()\n\n    const onDelete = id => {\n        if (window.confirm('Are you sure to delete this record?'))\n            props.deleteDispatch(id,()=>addToast(\"Deleted successfully\", { appearance: 'info' }))\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n            <Grid container>\n                {/* <DispatchForm {...({ currentId, setCurrentId })} /> */}\n                <Grid item xs={12}>\n                    <TableContainer>\n                        <Table>\n                            <TableHead className={classes.root}>\n                                <TableRow>\n                                    <TableCell>Title</TableCell>\n                                    <TableCell>Author</TableCell>\n                                    <TableCell>Photograper</TableCell>\n                                    <TableCell>Location</TableCell>\n                                    <TableCell>Description</TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.dispatchList.map((record, index) => {\n                                        return (<TableRow key={index} hover>\n                                            <TableCell>{record.title}</TableCell>\n                                            <TableCell>{record.author}</TableCell>\n                                            <TableCell>{record.photographer}</TableCell>\n                                            <TableCell>{record.location}</TableCell>\n                                            <TableCell>{record.description}</TableCell>\n                                            <TableCell>\n                                                <ButtonGroup variant=\"text\">\n                                                    <Button><EditIcon color=\"primary\"\n                                                        onClick={() => { setCurrentId(record.id) }} /></Button>\n                                                    <Button><DeleteIcon color=\"secondary\"\n                                                        onClick={() => onDelete(record.id)} /></Button>\n                                                </ButtonGroup>\n                                            </TableCell>\n                                        </TableRow>)\n                                    })\n                                }\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nconst mapStateToProps = state => ({\n    dispatchList: state.dispatch.list\n})\n\nconst mapActionToProps = {\n    fetchAllDispatches: actions.fetchAll,\n    deleteDispatch: actions.Delete\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Dispatches));",["92","93"],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/Dispatch.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/dispatch.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/App.js",["94"],"import './App.css';\nimport Nav from './components/Nav';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Admin from './components/Admin';\nimport Dispatches from './components/Dispatches';\nimport DispatchMenu from './components/DispatchMenu';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { store } from \"./actions/store\";\nimport { Provider } from \"react-redux\";\nimport { Container } from '@material-ui/core';\nimport { ToastProvider } from \"react-toast-notifications\";\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <ToastProvider autoDismiss={true}>\n          <Container maxWidth=\"lg\">\n            <Nav />\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/dispatch\" component={DispatchMenu} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/admin\" component={Admin} />\n            </Switch>\n          {/* <Dispatches /> */}\n          </Container>\n        </ToastProvider>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n",["95","96"],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/index.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/DispatchForm.js",["97","98","99","100","101","102","103","104","105","106","107","108"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\nimport useForm from \"./useForm\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/dispatch\";\nimport { useToasts } from \"react-toast-notifications\";\n\nconst styles = theme => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            minWidth: 230,\n        }\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 230,\n    },\n    smMargin: {\n        margin: theme.spacing(1)\n    }\n})\n\nconst initialFieldValues = {\n    title: '',\n    author: '',\n    photographer: '',\n    location: '',\n    description: '',\n    imageName: '',\n    imageSrc: '',\n    imageFile:null\n\n}\n\nconst DispatchForm = ({ classes, ...props }) => {\n\n    //toast msg.\n    const { addToast } = useToasts()\n\n    //validate()\n    //validate({fullName:'jenny'})\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\n        if ('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile ? \"\" : \"This field is required.\"\n        if ('bloodGroup' in fieldValues)\n            temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required.\"\n        if ('email' in fieldValues)\n            temp.email = (/^$|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\n\n    //material-ui select\n    // const inputLabel = React.useRef(null);\n    // const [labelWidth, setLabelWidth] = React.useState(0);\n    // React.useEffect(() => {\n    //     setLabelWidth(inputLabel.current.offsetWidth);\n    // }, []);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()) {\n            const onSuccess = () => {\n                resetForm()\n                addToast(\"Submitted successfully\", { appearance: 'success' })\n            }\n            if (props.currentId == 0)\n                props.createDispatch(values, onSuccess)\n            else\n                props.updateDispatch(props.currentId, values, onSuccess)\n        }\n    }\n\n    useEffect(() => {\n        if (props.currentId != 0) {\n            setValues({\n                ...props.dispatchList.find(x => x.id == props.currentId)\n            })\n            setErrors({})\n        }\n    }, [props.currentId])\n\n    return (\n        <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"title\"\n                        variant=\"outlined\"\n                        label=\"Title\"\n                        value={values.title}\n                        onChange={handleInputChange}\n                        {...(errors.title && { error: true, helperText: errors.title })}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"author\"\n                        variant=\"outlined\"\n                        label=\"author\"\n                        value={values.author}\n                        onChange={handleInputChange}\n                        {...(errors.author && { error: true, helperText: errors.author })}\n                    />\n                    {/* <FormControl variant=\"outlined\"\n                        className={classes.formControl}\n                        {...(errors.bloodGroup && { error: true })}\n                    >\n                        <InputLabel ref={inputLabel}>Blood Group</InputLabel>\n                        <Select\n                            name=\"bloodGroup\"\n                            value={values.bloodGroup}\n                            onChange={handleInputChange}\n                            labelWidth={labelWidth}\n                        >\n                            <MenuItem value=\"\">Select Blood Group</MenuItem>\n                            <MenuItem value=\"A+\">A +ve</MenuItem>\n                            <MenuItem value=\"A-\">A -ve</MenuItem>\n                            <MenuItem value=\"B+\">B +ve</MenuItem>\n                            <MenuItem value=\"B-\">B -ve</MenuItem>\n                            <MenuItem value=\"AB+\">AB +ve</MenuItem>\n                            <MenuItem value=\"AB-\">AB -ve</MenuItem>\n                            <MenuItem value=\"O+\">O +ve</MenuItem>\n                            <MenuItem value=\"O-\">O -ve</MenuItem>\n                        </Select>\n                        {errors.bloodGroup && <FormHelperText>{errors.bloodGroup}</FormHelperText>}\n                    </FormControl> */}\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"photographer\"\n                        variant=\"outlined\"\n                        label=\"photographer\"\n                        value={values.photographer}\n                        onChange={handleInputChange}\n                        {...(errors.photographer && { error: true, helperText: errors.photographer })}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"location\"\n                        variant=\"outlined\"\n                        label=\"location\"\n                        value={values.location}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"description\"\n                        variant=\"outlined\"\n                        label=\"description\"\n                        value={values.description}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            className={classes.smMargin}\n                        >\n                            Submit\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            className={classes.smMargin}\n                            onClick={resetForm}\n                        >\n                            Reset\n                        </Button>\n                    </div>\n                </Grid>\n            </Grid>\n        </form>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    dispatchList: state.dispatch.list\n})\n\nconst mapActionToProps = {\n    createDispatch: actions.create,\n    updateDispatch: actions.update\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(DispatchForm));","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/useForm.js",["109","110"],"import React, { useState, useEffect } from \"react\";\n\nconst useForm = (initialFieldValues, validate, setCurrentId) => {\n    const [values, setValues] = useState(initialFieldValues)\n    const [errors, setErrors] = useState({})\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        const fieldValue = { [name]: value }\n        setValues({\n            ...values,\n            ...fieldValue\n        })\n        validate(fieldValue)\n    }\n\n    const resetForm = () => {\n        setValues({\n            ...initialFieldValues\n        })\n        setErrors({})\n        setCurrentId(0)\n    }\n\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    };\n}\n\nexport default useForm;",["111","112"],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/reducers/index.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Nav.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Home.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/DispatchMenu.js",["113","114","115","116","117"],"import React from 'react';\nimport '../App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    alignItems: 'center'\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n    borderBottom: '.5px solid #707070',\n    borderTop: '.5px solid #707070',\n  },\n  border: {\n    borderBottom: '.5px solid #707070',\n    borderTop: '.5px solid #707070',\n  },\n  column: {\n    // flexBasis: '33.33%',\n    textAlign: 'center',\n    margin: 'auto',\n  },\n  helper: {\n    // borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  txt: {\n    fontWeight: 400,\n    fontSize: '10px',\n    color: \"#707070\",\n  },\n  txtH: {\n    fontWeight: 700,\n    fontSize: '15px',\n    color: \"#707070\",\n    textTransform: 'Uppercase'\n  },\n  txtHH: {\n    fontWeight: 700,\n    fontSize: '10px',\n    color: \"#707070\",\n  },\n}));\n\nexport default function DispatchMenu() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Accordion defaultExpanded>\n        <AccordionSummary\n          aria-controls=\"panel1c-content\"\n          id=\"panel1c-header\"\n        >\n          <div className={classes.column}>\n            <Typography className={classes.txtHH}>2019</Typography>\n          </div>\n        </AccordionSummary>\n        <AccordionDetails className={classes.details}>\n          <div className={classes.column}>\n            <Typography className={classes.txt}>08/26</Typography>\n          </div>\n          <div className={clsx(classes.column, classes.helper)}>\n            <Typography variant=\"caption\" className={classes.txtH}>\n              <a href=\"#secondary-heading-and-columns\" className={classes.link}>\n              Devil's Peak\n              <br />\n              Downhill\n              </a>\n            </Typography>\n          </div>\n          <div className={classes.column}>\n            <Typography className={classes.txt}>\n              CO\n               <br />\n              USA\n            </Typography>\n          </div>\n        </AccordionDetails>\n        {/* <Divider />\n        <AccordionActions>\n          <Button size=\"small\">Cancel</Button>\n          <Button size=\"small\" color=\"primary\">\n            Save\n          </Button>\n        </AccordionActions> */}\n      </Accordion>\n    </div>\n  );\n}\n","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/About.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Admin.js",["118"],"import { Paper, Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport DispatchForm from \"./DispatchForm\";\nimport * as actions from \"../actions/dispatch\";\nimport { connect } from \"react-redux\";\n\n\nconst Admin = ({ classes, ...props }) => {\n    const [currentId, setCurrentId] = useState(0)\n\n    useEffect(() => {\n        props.fetchAllDispatches()\n    }, [])\n\n    return (\n        <Paper elevation={3}>\n            <Grid container>\n                <Grid item xs={12}>\n                   <DispatchForm {...({ currentId, setCurrentId })} /> \n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nconst mapStateToProps = state => ({\n    dispatchList: state.dispatch.list\n})\n\nconst mapActionToProps = {\n    fetchAllDispatches: actions.fetchAll,\n    deleteDispatch: actions.Delete\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(Admin);",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"119","replacedBy":"123"},{"ruleId":"121","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":25,"column":48,"nodeType":"127","messageId":"128","endLine":25,"endColumn":50},{"ruleId":"125","severity":1,"message":"129","line":31,"column":51,"nodeType":"127","messageId":"128","endLine":31,"endColumn":53},{"ruleId":"130","severity":1,"message":"131","line":6,"column":1,"nodeType":"132","endLine":17,"endColumn":2},{"ruleId":"133","severity":1,"message":"134","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":20},{"ruleId":"133","severity":1,"message":"137","line":24,"column":12,"nodeType":"135","messageId":"136","endLine":24,"endColumn":21},{"ruleId":"138","severity":1,"message":"139","line":28,"column":8,"nodeType":"140","endLine":28,"endColumn":10,"suggestions":"141"},{"ruleId":"119","replacedBy":"142"},{"ruleId":"121","replacedBy":"143"},{"ruleId":"133","severity":1,"message":"144","line":6,"column":8,"nodeType":"135","messageId":"136","endLine":6,"endColumn":18},{"ruleId":"119","replacedBy":"145"},{"ruleId":"121","replacedBy":"146"},{"ruleId":"133","severity":1,"message":"147","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"148","line":2,"column":39,"nodeType":"135","messageId":"136","endLine":2,"endColumn":50},{"ruleId":"133","severity":1,"message":"149","line":2,"column":52,"nodeType":"135","messageId":"136","endLine":2,"endColumn":62},{"ruleId":"133","severity":1,"message":"150","line":2,"column":64,"nodeType":"135","messageId":"136","endLine":2,"endColumn":70},{"ruleId":"133","severity":1,"message":"151","line":2,"column":72,"nodeType":"135","messageId":"136","endLine":2,"endColumn":80},{"ruleId":"133","severity":1,"message":"152","line":2,"column":90,"nodeType":"135","messageId":"136","endLine":2,"endColumn":104},{"ruleId":"125","severity":1,"message":"126","line":57,"column":25,"nodeType":"127","messageId":"128","endLine":57,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":58,"column":53,"nodeType":"127","messageId":"128","endLine":58,"endColumn":55},{"ruleId":"125","severity":1,"message":"126","line":84,"column":33,"nodeType":"127","messageId":"128","endLine":84,"endColumn":35},{"ruleId":"125","severity":1,"message":"129","line":92,"column":29,"nodeType":"127","messageId":"128","endLine":92,"endColumn":31},{"ruleId":"125","severity":1,"message":"126","line":94,"column":54,"nodeType":"127","messageId":"128","endLine":94,"endColumn":56},{"ruleId":"138","severity":1,"message":"153","line":98,"column":8,"nodeType":"140","endLine":98,"endColumn":25,"suggestions":"154"},{"ruleId":"133","severity":1,"message":"155","line":1,"column":8,"nodeType":"135","messageId":"136","endLine":1,"endColumn":13},{"ruleId":"133","severity":1,"message":"156","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"119","replacedBy":"157"},{"ruleId":"121","replacedBy":"158"},{"ruleId":"133","severity":1,"message":"159","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":24},{"ruleId":"133","severity":1,"message":"160","line":10,"column":8,"nodeType":"135","messageId":"136","endLine":10,"endColumn":22},{"ruleId":"133","severity":1,"message":"161","line":11,"column":8,"nodeType":"135","messageId":"136","endLine":11,"endColumn":12},{"ruleId":"133","severity":1,"message":"162","line":12,"column":8,"nodeType":"135","messageId":"136","endLine":12,"endColumn":14},{"ruleId":"133","severity":1,"message":"163","line":13,"column":8,"nodeType":"135","messageId":"136","endLine":13,"endColumn":15},{"ruleId":"138","severity":1,"message":"139","line":14,"column":8,"nodeType":"140","endLine":14,"endColumn":10,"suggestions":"164"},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],["165"],["166"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'DispatchForm' is defined but never used.","Identifier","unusedVar","'currentId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["167"],["165"],["166"],"'Dispatches' is defined but never used.",["165"],["166"],"'useState' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'FormHelperText' is defined but never used.","React Hook useEffect has missing dependencies: 'props.dispatchList', 'setErrors', and 'setValues'. Either include them or remove the dependency array.",["168"],"'React' is defined but never used.","'useEffect' is defined but never used.",["165"],["166"],"'AccordionActions' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Chip' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.",["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"170","fix":"174"},"Update the dependencies array to be: [props]",{"range":"175","text":"176"},"Update the dependencies array to be: [props.currentId, props.dispatchList, setErrors, setValues]",{"range":"177","text":"178"},{"range":"179","text":"176"},[863,865],"[props]",[2813,2830],"[props.currentId, props.dispatchList, setErrors, setValues]",[412,414]]