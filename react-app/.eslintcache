[{"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/reportWebVitals.js":"1","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/store.js":"2","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/reducers/dispatch.js":"3","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/api.js":"4","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Dispatches.js":"5","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/Dispatch.js":"6","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/dispatch.js":"7","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/App.js":"8","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/index.js":"9","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/DispatchForm.js":"10","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/useForm.js":"11","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/reducers/index.js":"12","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Nav.js":"13","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Home.js":"14","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/DispatchMenu.js":"15","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/About.js":"16"},{"size":362,"mtime":1606256976471,"results":"17","hashOfConfig":"18"},{"size":322,"mtime":1606606953597,"results":"19","hashOfConfig":"18"},{"size":895,"mtime":1606622581563,"results":"20","hashOfConfig":"18"},{"size":453,"mtime":1606604346899,"results":"21","hashOfConfig":"18"},{"size":3808,"mtime":1606710287653,"results":"22","hashOfConfig":"18"},{"size":426,"mtime":1606606736594,"results":"23","hashOfConfig":"18"},{"size":1346,"mtime":1606626567700,"results":"24","hashOfConfig":"18"},{"size":1130,"mtime":1606711562398,"results":"25","hashOfConfig":"18"},{"size":500,"mtime":1606256976470,"results":"26","hashOfConfig":"18"},{"size":7012,"mtime":1606623677205,"results":"27","hashOfConfig":"18"},{"size":774,"mtime":1606621875342,"results":"28","hashOfConfig":"18"},{"size":138,"mtime":1606604780819,"results":"29","hashOfConfig":"18"},{"size":261,"mtime":1606694236801,"results":"30","hashOfConfig":"18"},{"size":937,"mtime":1606698905415,"results":"31","hashOfConfig":"18"},{"size":2603,"mtime":1606713327493,"results":"32","hashOfConfig":"18"},{"size":163,"mtime":1606636022523,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1lfffnw",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/reportWebVitals.js",[],["74","75"],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/store.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/reducers/dispatch.js",["76","77"],"import { ACTION_TYPES } from \"../actions/dispatch\"; \nconst initialState = {\n    list:[]\n}\n\n\nexport const dispatch = (state = initialState, action) => {\n    \n    switch (action.type) {\n        case ACTION_TYPES.FETCH_ALL:\n            return {\n                ...state,\n                list: [...action.payload]\n            }\n        \n        case ACTION_TYPES.CREATE:\n            return {\n                ...state,\n                list: [...state.list, action.payload]\n            }\n\n        case ACTION_TYPES.UPDATE:\n            return {\n                ...state,\n                list: state.list.map(x => x.id == action.payload.id ? action.payload : x)\n            }\n\n        case ACTION_TYPES.DELETE:\n            return {\n                ...state,\n                list: state.list.filter(x => x.id != action.payload)\n            }\n            \n        default:\n            return state\n    }\n}","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/api.js",["78"],"import axios from \"axios\";\n\nconst baseUrl = \"https://localhost:5001/api/\"\n\n\nexport default {\n\n    dispatch(url = baseUrl + 'dispatch/') {\n        return {\n            fetchAll: () => axios.get(url),\n            fetchById: id => axios.get(url + id),\n            create: newRecord => axios.post(url, newRecord),\n            update: (id, updateRecord) => axios.put(url + id, updateRecord),\n            delete: id => axios.delete(url + id)\n        }\n    }\n}",["79","80"],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Dispatches.js",["81","82","83"],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/Dispatch.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/actions/dispatch.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/App.js",["84"],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/index.js",[],["85","86"],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/DispatchForm.js",["87","88","89","90","91","92","93","94","95","96","97","98"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\nimport useForm from \"./useForm\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/dispatch\";\nimport { useToasts } from \"react-toast-notifications\";\n\nconst styles = theme => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            minWidth: 230,\n        }\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 230,\n    },\n    smMargin: {\n        margin: theme.spacing(1)\n    }\n})\n\nconst initialFieldValues = {\n    title: '',\n    author: '',\n    photographer: '',\n    location: '',\n    description: '',\n}\n\nconst DispatchForm = ({ classes, ...props }) => {\n\n    //toast msg.\n    const { addToast } = useToasts()\n\n    //validate()\n    //validate({fullName:'jenny'})\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\n        if ('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile ? \"\" : \"This field is required.\"\n        if ('bloodGroup' in fieldValues)\n            temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required.\"\n        if ('email' in fieldValues)\n            temp.email = (/^$|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\n\n    //material-ui select\n    // const inputLabel = React.useRef(null);\n    // const [labelWidth, setLabelWidth] = React.useState(0);\n    // React.useEffect(() => {\n    //     setLabelWidth(inputLabel.current.offsetWidth);\n    // }, []);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()) {\n            const onSuccess = () => {\n                resetForm()\n                addToast(\"Submitted successfully\", { appearance: 'success' })\n            }\n            if (props.currentId == 0)\n                props.createDispatch(values, onSuccess)\n            else\n                props.updateDispatch(props.currentId, values, onSuccess)\n        }\n    }\n\n    useEffect(() => {\n        if (props.currentId != 0) {\n            setValues({\n                ...props.dispatchList.find(x => x.id == props.currentId)\n            })\n            setErrors({})\n        }\n    }, [props.currentId])\n\n    return (\n        <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <TextField\n                        name=\"title\"\n                        variant=\"outlined\"\n                        label=\"Title\"\n                        value={values.title}\n                        onChange={handleInputChange}\n                        {...(errors.title && { error: true, helperText: errors.title })}\n                    />\n                    <TextField\n                        name=\"author\"\n                        variant=\"outlined\"\n                        label=\"author\"\n                        value={values.author}\n                        onChange={handleInputChange}\n                        {...(errors.author && { error: true, helperText: errors.author })}\n                    />\n                    {/* <FormControl variant=\"outlined\"\n                        className={classes.formControl}\n                        {...(errors.bloodGroup && { error: true })}\n                    >\n                        <InputLabel ref={inputLabel}>Blood Group</InputLabel>\n                        <Select\n                            name=\"bloodGroup\"\n                            value={values.bloodGroup}\n                            onChange={handleInputChange}\n                            labelWidth={labelWidth}\n                        >\n                            <MenuItem value=\"\">Select Blood Group</MenuItem>\n                            <MenuItem value=\"A+\">A +ve</MenuItem>\n                            <MenuItem value=\"A-\">A -ve</MenuItem>\n                            <MenuItem value=\"B+\">B +ve</MenuItem>\n                            <MenuItem value=\"B-\">B -ve</MenuItem>\n                            <MenuItem value=\"AB+\">AB +ve</MenuItem>\n                            <MenuItem value=\"AB-\">AB -ve</MenuItem>\n                            <MenuItem value=\"O+\">O +ve</MenuItem>\n                            <MenuItem value=\"O-\">O -ve</MenuItem>\n                        </Select>\n                        {errors.bloodGroup && <FormHelperText>{errors.bloodGroup}</FormHelperText>}\n                    </FormControl> */}\n                </Grid>\n                <Grid item xs={6}>\n\n                    <TextField\n                        name=\"photographer\"\n                        variant=\"outlined\"\n                        label=\"photographer\"\n                        value={values.photographer}\n                        onChange={handleInputChange}\n                        {...(errors.photographer && { error: true, helperText: errors.photographer })}\n                    />\n                    <TextField\n                        name=\"location\"\n                        variant=\"outlined\"\n                        label=\"location\"\n                        value={values.location}\n                        onChange={handleInputChange}\n                    />\n                    <TextField\n                        name=\"description\"\n                        variant=\"outlined\"\n                        label=\"description\"\n                        value={values.description}\n                        onChange={handleInputChange}\n                    />\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            className={classes.smMargin}\n                        >\n                            Submit\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            className={classes.smMargin}\n                            onClick={resetForm}\n                        >\n                            Reset\n                        </Button>\n                    </div>\n                </Grid>\n            </Grid>\n        </form>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    dispatchList: state.dispatch.list\n})\n\nconst mapActionToProps = {\n    createDispatch: actions.create,\n    updateDispatch: actions.update\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(DispatchForm));",["99","100"],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/useForm.js",["101","102"],"import React, { useState, useEffect } from \"react\";\n\nconst useForm = (initialFieldValues, validate, setCurrentId) => {\n    const [values, setValues] = useState(initialFieldValues)\n    const [errors, setErrors] = useState({})\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        const fieldValue = { [name]: value }\n        setValues({\n            ...values,\n            ...fieldValue\n        })\n        validate(fieldValue)\n    }\n\n    const resetForm = () => {\n        setValues({\n            ...initialFieldValues\n        })\n        setErrors({})\n        setCurrentId(0)\n    }\n\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    };\n}\n\nexport default useForm;","/Users/mrillstone/Projects/DownGradeAPI/react-app/src/reducers/index.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Nav.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/Home.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/DispatchMenu.js",[],"/Users/mrillstone/Projects/DownGradeAPI/react-app/src/components/About.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":25,"column":48,"nodeType":"109","messageId":"110","endLine":25,"endColumn":50},{"ruleId":"107","severity":1,"message":"111","line":31,"column":51,"nodeType":"109","messageId":"110","endLine":31,"endColumn":53},{"ruleId":"112","severity":1,"message":"113","line":6,"column":1,"nodeType":"114","endLine":17,"endColumn":2},{"ruleId":"103","replacedBy":"115"},{"ruleId":"105","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":20},{"ruleId":"117","severity":1,"message":"121","line":24,"column":12,"nodeType":"119","messageId":"120","endLine":24,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":28,"column":8,"nodeType":"124","endLine":28,"endColumn":10,"suggestions":"125"},{"ruleId":"117","severity":1,"message":"126","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":18},{"ruleId":"103","replacedBy":"127"},{"ruleId":"105","replacedBy":"128"},{"ruleId":"117","severity":1,"message":"129","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"130","line":2,"column":39,"nodeType":"119","messageId":"120","endLine":2,"endColumn":50},{"ruleId":"117","severity":1,"message":"131","line":2,"column":52,"nodeType":"119","messageId":"120","endLine":2,"endColumn":62},{"ruleId":"117","severity":1,"message":"132","line":2,"column":64,"nodeType":"119","messageId":"120","endLine":2,"endColumn":70},{"ruleId":"117","severity":1,"message":"133","line":2,"column":72,"nodeType":"119","messageId":"120","endLine":2,"endColumn":80},{"ruleId":"117","severity":1,"message":"134","line":2,"column":90,"nodeType":"119","messageId":"120","endLine":2,"endColumn":104},{"ruleId":"107","severity":1,"message":"108","line":53,"column":25,"nodeType":"109","messageId":"110","endLine":53,"endColumn":27},{"ruleId":"107","severity":1,"message":"108","line":54,"column":53,"nodeType":"109","messageId":"110","endLine":54,"endColumn":55},{"ruleId":"107","severity":1,"message":"108","line":80,"column":33,"nodeType":"109","messageId":"110","endLine":80,"endColumn":35},{"ruleId":"107","severity":1,"message":"111","line":88,"column":29,"nodeType":"109","messageId":"110","endLine":88,"endColumn":31},{"ruleId":"107","severity":1,"message":"108","line":90,"column":54,"nodeType":"109","messageId":"110","endLine":90,"endColumn":56},{"ruleId":"122","severity":1,"message":"135","line":94,"column":8,"nodeType":"124","endLine":94,"endColumn":25,"suggestions":"136"},{"ruleId":"103","replacedBy":"137"},{"ruleId":"105","replacedBy":"138"},{"ruleId":"117","severity":1,"message":"139","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"117","severity":1,"message":"140","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["141"],["142"],"no-unused-vars","'DispatchForm' is defined but never used.","Identifier","unusedVar","'currentId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["143"],"'Dispatches' is defined but never used.",["141"],["142"],"'useState' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'FormHelperText' is defined but never used.","React Hook useEffect has missing dependencies: 'props.dispatchList', 'setErrors', and 'setValues'. Either include them or remove the dependency array.",["144"],["141"],["142"],"'React' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [props]",{"range":"149","text":"150"},"Update the dependencies array to be: [props.currentId, props.dispatchList, setErrors, setValues]",{"range":"151","text":"152"},[863,865],"[props]",[2756,2773],"[props.currentId, props.dispatchList, setErrors, setValues]"]